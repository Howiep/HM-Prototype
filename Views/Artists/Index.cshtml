@model PagedList.IPagedList<HeedeMoestrup.Models.Artist>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

<h2>Kunstnere</h2>
<p>
    Her kan man tilføje og fjerne kunstnere. Det er meget ligetil i forhold til hvilke knapper der gør hvad.
</p>
<p>
    På hjemmesiden forside bliver der vist kunst fra de fremtrædende kunstnere.
</p>
<p>
    så hvis <b>Fremtrædende</b> feltet bliver checked så vil Kunstnerens værker blive vist iblandt dem på forsiden.
</p>
<p>
    Hvis H&M forlaget udgiver kunst for den valgte kunstner så skal <b>udgivelser af H&M?</b> feltet checkes. Derefter vil denne kunster blive vist på Udgivelser af H&M siden.
</p>
<p>

</p>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Index", "Artists", FormMethod.Get))
        {
            <div>
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "searchBox" })
                <button type="submit" value="Search" class="btn btn-default sbtn"><i class="fa fa-search" aria-hidden="true"></i></button>
            </div>

        }
    </div>
</div>
<table class="table">
    <tr>
        <th>
            Navn
        </th>
        <th>
            Beskrivelse
        </th>
        <th>
            Fremtrædende?
        </th>
        <th>
            udgivelser af H&M?
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
               
                @Html.Raw(item.Desc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Featured)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HMPublication)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
                    }

</table>
<br />

    Side @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) af @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))